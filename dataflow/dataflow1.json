{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CUSTOMERDATA_TGT_CSV",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_CUSTOMERDATA_TGT",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CID as integer,",
				"          Name as string,",
				"          MailID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"derivedColumn1 filter(toInteger(CID)%2!=0) ~> filter1",
				"source1 derive(CID = toInteger(CID)) ~> derivedColumn1",
				"exists1 alterRow(upsertIf(iif(isNull(CID), \"INSERT\", \"UPDATE\")\r",
				")) ~> AlterRow1",
				"filter1, derivedColumn1 exists(derivedColumn1@CID == ERROR_FUNCTION(''),",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CID as integer,",
				"          Name as string,",
				"          MailID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['CID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}