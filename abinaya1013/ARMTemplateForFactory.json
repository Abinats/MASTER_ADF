{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "abinaya1013"
		},
		"DS_JSON_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DS_JSON'"
		},
		"DS_SQL_GENERIC_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DS_SQL_GENERIC'"
		},
		"LS_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS'"
		},
		"LS_ADLS_GENERIC_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_GENERIC'"
		},
		"LS_API_PARQUET_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_API_PARQUET'"
		},
		"LS_PARAM_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_PARAM'"
		},
		"LS_SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL'"
		},
		"DS_JSON_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuretrassig.dfs.core.windows.net/"
		},
		"DS_REST_API2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/name"
		},
		"DS_SQL_GENERIC_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azuretrainingsqlserver2024.database.windows.net"
		},
		"DS_SQL_GENERIC_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azuredb"
		},
		"DS_SQL_GENERIC_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin2024"
		},
		"LS_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuretrassig.dfs.core.windows.net/"
		},
		"LS_ADLS_GENERIC_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuretrassig.dfs.core.windows.net/"
		},
		"LS_API_PARQUET_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuretrassig.dfs.core.windows.net/"
		},
		"LS_PARAM_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azuretrassig.dfs.core.windows.net/"
		},
		"LS_REST_API2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/name"
		},
		"LS_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azuretrainingsqlserver2024.database.windows.net"
		},
		"LS_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "azuredb"
		},
		"LS_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin2024"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/all"
		},
		"RestService2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/name"
		},
		"storage_event-trigger3_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/dc271e3c-2651-4aa6-8f51-41ccb982b47d/resourceGroups/New_resource/providers/Microsoft.Storage/storageAccounts/azuretrassig"
		},
		"storage_event_trigger2_properties_PL_API_QUESTION2_6_parameters_fname": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"storage_event_trigger2_properties_PL_API_QUESTION2_6_parameters_cname": {
			"type": "string",
			"defaultValue": "@triggerBody().filePath"
		},
		"storage_event_trigger2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/dc271e3c-2651-4aa6-8f51-41ccb982b47d/resourceGroups/New_resource/providers/Microsoft.Storage/storageAccounts/azuretrassig"
		},
		"storage_event_trigger3_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/dc271e3c-2651-4aa6-8f51-41ccb982b47d/resourceGroups/New_resource/providers/Microsoft.Storage/storageAccounts/azuretrassig"
		},
		"storage_event_trigger_dept_properties_PL_STORAGE_TRIGGERS_PARAM_parameters_fname": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"storage_event_trigger_dept_properties_PL_STORAGE_TRIGGERS_PARAM_parameters_cname": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"storage_event_trigger_dept_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/dc271e3c-2651-4aa6-8f51-41ccb982b47d/resourceGroups/New_resource/providers/Microsoft.Storage/storageAccounts/azuretrassig"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_ADV_QUES1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADV_QUESTION1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ADV_QUESTION1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ASSIGNMENT_6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ADV_QUESTION1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_API_PARQUET_QUESTION1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_REST_ALLCOUNTRIES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_APRQUET_API",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"items": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ASSIGNMENT_6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_ALLCOUNTRIES')]",
				"[concat(variables('factoryId'), '/datasets/DS_APRQUET_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_API_QUESTION2_6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('india','us','uk','china','russia')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_RESTAPI",
											"type": "DatasetReference",
											"parameters": {
												"item": "india",
												"filename": {
													"value": "@pipeline().parameters.fname",
													"type": "Expression"
												},
												"containername": {
													"value": "@pipeline().parameters.cname",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_json_api5",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "india",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fname": {
						"type": "string"
					},
					"cname": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ASSIGNMENT_6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_RESTAPI')]",
				"[concat(variables('factoryId'), '/datasets/ds_json_api5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_API_QUESTION4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('india','us','uk','china','russia')",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_RESTAPI_COUNTRYNAME",
											"type": "DatasetReference",
											"parameters": {
												"item": "honolulu"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_JSON_API3",
											"type": "DatasetReference",
											"parameters": {
												"filename": "russia"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ASSIGNMENT_6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_RESTAPI_COUNTRYNAME')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSON_API3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CUSTOMERDATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CUSTOMERDATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CUSTOMERDATA_TGT_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_TGT_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CUSTOMERDATASQL_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CUSTOMERDATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CUSTOMERDATA_TGT_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA')]",
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_TGT_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PARAM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_PARAM",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FilenamePL",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_TARGET",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FilenamePL",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FilenamePL": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_PARAM')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_TARGET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PRODUCT_SQL_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PRODUCT_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV2",
								"type": "DatasetReference",
								"parameters": {
									"Folderpath": "PRODUCT_CSV",
									"Filename": "PRODUCT"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PRODUCT_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_QUESTION2_API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('india','us','uk','china','russia')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_REST_API_ITEM",
											"type": "DatasetReference",
											"parameters": {
												"item": "uk"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_JSON_API2",
											"type": "DatasetReference",
											"parameters": {
												"filename": "uk"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"items": {
						"type": "String"
					}
				},
				"folder": {
					"name": "ASSIGNMENT_6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_REST_API_ITEM')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSON_API2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_STORAGE_TRIGGERS_PARAM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_TRIGGERS_SRC",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.fname",
										"type": "Expression"
									},
									"ContainerName": {
										"value": "@pipeline().parameters.cname",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TRIGGERS_CSV_TGT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"fname": {
						"type": "string"
					},
					"cname": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_TRIGGERS_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_TRIGGERS_CSV_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_csv_EMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_TGT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_API_QUESTION4_LOGICAPP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_API_QUESTION4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-09.centralus.logic.azure.com:443/workflows/460679c58d42469e9984f296d63adf7e/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=Gx--VKujVGb1SEUx8xjQtE-H1Yock8gk1g8q2HSYjlA",
							"body": {
								"value": "{\n\"PipelineName\":\"@{pipeline().Pipeline}\",\n\"DataFactoryName\": \"@{pipeline().DataFactory}\",\n\"RunIDs\":\"@{pipeline().RunId}\",\n\"ErrorMessage\": \"@{activity('Execute Pipeline1').output.pipelineReturnValue}\",\n}\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ASSIGNMENT_6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_API_QUESTION4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_APRQUET_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_PARQUET",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "PARQUET",
						"fileSystem": "target"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_PARQUET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CAR_DUP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "car_duplicate.txt",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "MODEL_NO",
						"type": "String"
					},
					{
						"name": "MODEL_NAME",
						"type": "String"
					},
					{
						"name": "MANUFACTURING_COUNTRY",
						"type": "String"
					},
					{
						"name": "START_DATE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emp_f2.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPLOYEE_ID",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "EMAIL",
						"type": "String"
					},
					{
						"name": "PHONE_NUMBER",
						"type": "String"
					},
					{
						"name": "HIRE_DATE",
						"type": "String"
					},
					{
						"name": "JOB_ID",
						"type": "String"
					},
					{
						"name": "SALARY",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_GENERIC",
					"type": "LinkedServiceReference",
					"parameters": {
						"Folderpath": "Product_csv",
						"Filename": "Product"
					}
				},
				"parameters": {
					"Folderpath": {
						"type": "string"
					},
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folderpath",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EMPLOYEE_ID",
						"type": "String"
					},
					{
						"name": "FIRST_NAME",
						"type": "String"
					},
					{
						"name": "LAST_NAME",
						"type": "String"
					},
					{
						"name": "EMAIL",
						"type": "String"
					},
					{
						"name": "PHONE_NUMBER",
						"type": "String"
					},
					{
						"name": "HIRE_DATE",
						"type": "String"
					},
					{
						"name": "JOB_ID",
						"type": "String"
					},
					{
						"name": "SALARY",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_GENERIC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_PARAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_PARAM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "dept.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "inputfilesparam"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_PARAM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_TARGET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "destinationfilesparam"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_TGT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "outputtgt"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_TRIGGERS_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"ContainerName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ContainerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "DEPARTMENT_ID",
						"type": "String"
					},
					{
						"name": "DEPARTMENT_NAME",
						"type": "String"
					},
					{
						"name": "MANAGER_ID",
						"type": "String"
					},
					{
						"name": "LOCATION_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CUSTOMERDATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "MailID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CUSTOMERDATA_SCDTYPE3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "MailID",
						"type": "varchar"
					},
					{
						"name": "previous_MailID",
						"type": "varchar"
					},
					{
						"name": "effective_startdate",
						"type": "date"
					},
					{
						"name": "effective_enddate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customerdata_scdtype3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CUSTOMERDATA_TGT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "MailID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerData_tgt"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CUSTOMERDATA_TGT_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.CustomerData.txt",
						"folderPath": "CUSTOMER",
						"fileSystem": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "JSON",
						"fileSystem": "target"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON_API2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().filename,'.json')",
							"type": "Expression"
						},
						"folderPath": "API",
						"fileSystem": "target"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON_API3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().filename,'.json')",
							"type": "Expression"
						},
						"fileSystem": "targetapi"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "object",
							"properties": {
								"common": {
									"type": "string"
								},
								"official": {
									"type": "string"
								},
								"nativeName": {
									"type": "object",
									"properties": {
										"eng": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"hin": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"tam": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"tld": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"cca2": {
							"type": "string"
						},
						"ccn3": {
							"type": "string"
						},
						"cca3": {
							"type": "string"
						},
						"cioc": {
							"type": "string"
						},
						"independent": {
							"type": "boolean"
						},
						"status": {
							"type": "string"
						},
						"unMember": {
							"type": "boolean"
						},
						"currencies": {
							"type": "object",
							"properties": {
								"INR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"USD": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								}
							}
						},
						"idd": {
							"type": "object",
							"properties": {
								"root": {
									"type": "string"
								},
								"suffixes": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"capital": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"altSpellings": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"region": {
							"type": "string"
						},
						"subregion": {
							"type": "string"
						},
						"languages": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "string"
								},
								"hin": {
									"type": "string"
								},
								"tam": {
									"type": "string"
								}
							}
						},
						"translations": {
							"type": "object",
							"properties": {
								"ara": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"bre": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ces": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"cym": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"deu": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"est": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fin": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hrv": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hun": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ita": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"jpn": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"kor": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"nld": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"per": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"pol": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"por": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"rus": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"slk": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"spa": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"srp": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"swe": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"tur": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"urd": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"zho": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								}
							}
						},
						"latlng": {
							"type": "array",
							"items": {
								"type": "number"
							}
						},
						"landlocked": {
							"type": "boolean"
						},
						"borders": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"area": {
							"type": "number"
						},
						"demonyms": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								}
							}
						},
						"flag": {
							"type": "string"
						},
						"maps": {
							"type": "object",
							"properties": {
								"googleMaps": {
									"type": "string"
								},
								"openStreetMaps": {
									"type": "string"
								}
							}
						},
						"population": {
							"type": "integer"
						},
						"gini": {
							"type": "object",
							"properties": {
								"2011": {
									"type": "number"
								}
							}
						},
						"fifa": {
							"type": "string"
						},
						"car": {
							"type": "object",
							"properties": {
								"signs": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"side": {
									"type": "string"
								}
							}
						},
						"timezones": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"continents": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"flags": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								},
								"alt": {
									"type": "string"
								}
							}
						},
						"coatOfArms": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								}
							}
						},
						"startOfWeek": {
							"type": "string"
						},
						"capitalInfo": {
							"type": "object",
							"properties": {
								"latlng": {
									"type": "array",
									"items": {
										"type": "number"
									}
								}
							}
						},
						"postalCode": {
							"type": "object",
							"properties": {
								"format": {
									"type": "string"
								},
								"regex": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON_TGT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "target"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "object",
							"properties": {
								"common": {
									"type": "string"
								},
								"official": {
									"type": "string"
								},
								"nativeName": {
									"type": "object",
									"properties": {
										"eng": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"hin": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"tam": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"ukr": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"kor": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"ell": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"tur": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"sot": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"ssw": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"fra": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"mfe": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"nld": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"pap": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"tld": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"cca2": {
							"type": "string"
						},
						"ccn3": {
							"type": "string"
						},
						"cca3": {
							"type": "string"
						},
						"cioc": {
							"type": "string"
						},
						"independent": {
							"type": "boolean"
						},
						"status": {
							"type": "string"
						},
						"unMember": {
							"type": "boolean"
						},
						"currencies": {
							"type": "object",
							"properties": {
								"INR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"USD": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"UAH": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"KPW": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"GBP": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"EUR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"LSL": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"ZAR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"SZL": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"MUR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								}
							}
						},
						"idd": {
							"type": "object",
							"properties": {
								"root": {
									"type": "string"
								},
								"suffixes": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"capital": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"altSpellings": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"region": {
							"type": "string"
						},
						"subregion": {
							"type": "string"
						},
						"languages": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "string"
								},
								"hin": {
									"type": "string"
								},
								"tam": {
									"type": "string"
								},
								"ukr": {
									"type": "string"
								},
								"kor": {
									"type": "string"
								},
								"ell": {
									"type": "string"
								},
								"tur": {
									"type": "string"
								},
								"sot": {
									"type": "string"
								},
								"ssw": {
									"type": "string"
								},
								"fra": {
									"type": "string"
								},
								"mfe": {
									"type": "string"
								},
								"nld": {
									"type": "string"
								},
								"pap": {
									"type": "string"
								}
							}
						},
						"translations": {
							"type": "object",
							"properties": {
								"ara": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"bre": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ces": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"cym": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"deu": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"est": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fin": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hrv": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hun": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ita": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"jpn": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"kor": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"nld": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"per": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"pol": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"por": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"rus": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"slk": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"spa": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"srp": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"swe": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"tur": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"urd": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"zho": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								}
							}
						},
						"latlng": {
							"type": "array",
							"items": {
								"type": "number"
							}
						},
						"landlocked": {
							"type": "boolean"
						},
						"borders": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"area": {
							"type": "number"
						},
						"demonyms": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								}
							}
						},
						"flag": {
							"type": "string"
						},
						"maps": {
							"type": "object",
							"properties": {
								"googleMaps": {
									"type": "string"
								},
								"openStreetMaps": {
									"type": "string"
								}
							}
						},
						"population": {
							"type": "integer"
						},
						"gini": {
							"type": "object",
							"properties": {
								"2011": {
									"type": "number"
								},
								"2016": {
									"type": "number"
								},
								"2017": {
									"type": "number"
								},
								"2018": {
									"type": "number"
								},
								"2019": {
									"type": "number"
								}
							}
						},
						"fifa": {
							"type": "string"
						},
						"car": {
							"type": "object",
							"properties": {
								"signs": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"side": {
									"type": "string"
								}
							}
						},
						"timezones": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"continents": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"flags": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								},
								"alt": {
									"type": "string"
								}
							}
						},
						"coatOfArms": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								}
							}
						},
						"startOfWeek": {
							"type": "string"
						},
						"capitalInfo": {
							"type": "object",
							"properties": {
								"latlng": {
									"type": "array",
									"items": {
										"type": "number"
									}
								}
							}
						},
						"postalCode": {
							"type": "object",
							"properties": {
								"format": {
									"type": "string"
								},
								"regex": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_SQL_GENERIC",
					"type": "LinkedServiceReference",
					"parameters": {
						"Schemaname": "SalesLT",
						"Tablename": "Product"
					}
				},
				"parameters": {
					"Schemaname": {
						"type": "string"
					},
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_SQL_GENERIC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PRODUCT_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PRODUCT_SRC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PRODUCT",
						"folderPath": "PRODUCT_CSV",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ProductNumber",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "ProductCategoryID",
						"type": "String"
					},
					{
						"name": "ProductModelID",
						"type": "String"
					},
					{
						"name": "SellStartDate",
						"type": "String"
					},
					{
						"name": "SellEndDate",
						"type": "String"
					},
					{
						"name": "DiscontinuedDate",
						"type": "String"
					},
					{
						"name": "ThumbNailPhoto",
						"type": "String"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PRODUCT_TGT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ProductSingleResult folder",
						"fileSystem": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_RESTAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_REST_API2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"item": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"containername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().item",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_REST_API2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_RESTAPI_COUNTRYNAME')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_REST_API2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"item": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().item",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_REST_API2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_ALLCOUNTRIES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_API_ITEM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"item": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().item",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TRIGGERS_CSV_TGT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "destinationfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().filename,'.json')",
							"type": "Expression"
						},
						"folderPath": "API_FILES",
						"fileSystem": "outputtgt"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_REST_API2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"item": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().item",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_REST_API2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"containername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().containername",
							"type": "Expression"
						},
						"fileSystem": "outputtgt"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json_api5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_JSON",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().filename,'.json')",
							"type": "Expression"
						},
						"fileSystem": "targetapi"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "object",
							"properties": {
								"common": {
									"type": "string"
								},
								"official": {
									"type": "string"
								},
								"nativeName": {
									"type": "object",
									"properties": {
										"eng": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"hin": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"tam": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"ukr": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"kor": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"ell": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"tur": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"sot": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"ssw": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"fra": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"mfe": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"nld": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"pap": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"tld": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"cca2": {
							"type": "string"
						},
						"ccn3": {
							"type": "string"
						},
						"cca3": {
							"type": "string"
						},
						"cioc": {
							"type": "string"
						},
						"independent": {
							"type": "boolean"
						},
						"status": {
							"type": "string"
						},
						"unMember": {
							"type": "boolean"
						},
						"currencies": {
							"type": "object",
							"properties": {
								"INR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"USD": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"UAH": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"KPW": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"GBP": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"EUR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"LSL": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"ZAR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"SZL": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"MUR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								}
							}
						},
						"idd": {
							"type": "object",
							"properties": {
								"root": {
									"type": "string"
								},
								"suffixes": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"capital": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"altSpellings": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"region": {
							"type": "string"
						},
						"subregion": {
							"type": "string"
						},
						"languages": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "string"
								},
								"hin": {
									"type": "string"
								},
								"tam": {
									"type": "string"
								},
								"ukr": {
									"type": "string"
								},
								"kor": {
									"type": "string"
								},
								"ell": {
									"type": "string"
								},
								"tur": {
									"type": "string"
								},
								"sot": {
									"type": "string"
								},
								"ssw": {
									"type": "string"
								},
								"fra": {
									"type": "string"
								},
								"mfe": {
									"type": "string"
								},
								"nld": {
									"type": "string"
								},
								"pap": {
									"type": "string"
								}
							}
						},
						"translations": {
							"type": "object",
							"properties": {
								"ara": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"bre": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ces": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"cym": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"deu": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"est": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fin": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hrv": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hun": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ita": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"jpn": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"kor": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"nld": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"per": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"pol": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"por": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"rus": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"slk": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"spa": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"srp": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"swe": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"tur": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"urd": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"zho": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								}
							}
						},
						"latlng": {
							"type": "array",
							"items": {
								"type": "number"
							}
						},
						"landlocked": {
							"type": "boolean"
						},
						"borders": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"area": {
							"type": "number"
						},
						"demonyms": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								}
							}
						},
						"flag": {
							"type": "string"
						},
						"maps": {
							"type": "object",
							"properties": {
								"googleMaps": {
									"type": "string"
								},
								"openStreetMaps": {
									"type": "string"
								}
							}
						},
						"population": {
							"type": "integer"
						},
						"gini": {
							"type": "object",
							"properties": {
								"2011": {
									"type": "number"
								},
								"2016": {
									"type": "number"
								},
								"2017": {
									"type": "number"
								},
								"2018": {
									"type": "number"
								},
								"2019": {
									"type": "number"
								}
							}
						},
						"fifa": {
							"type": "string"
						},
						"car": {
							"type": "object",
							"properties": {
								"signs": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"side": {
									"type": "string"
								}
							}
						},
						"timezones": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"continents": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"flags": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								},
								"alt": {
									"type": "string"
								}
							}
						},
						"coatOfArms": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								}
							}
						},
						"startOfWeek": {
							"type": "string"
						},
						"capitalInfo": {
							"type": "object",
							"properties": {
								"latlng": {
									"type": "array",
									"items": {
										"type": "number"
									}
								}
							}
						},
						"postalCode": {
							"type": "object",
							"properties": {
								"format": {
									"type": "string"
								},
								"regex": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DS_JSON_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DS_JSON_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_API2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('DS_REST_API2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_GENERIC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Schemaname": {
						"type": "string"
					},
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DS_SQL_GENERIC_properties_typeProperties_server')]",
					"database": "[parameters('DS_SQL_GENERIC_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DS_SQL_GENERIC_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DS_SQL_GENERIC_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_GENERIC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Folderpath": {
						"type": "string"
					},
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_GENERIC_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_GENERIC_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_PARQUET')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_API_PARQUET_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_API_PARQUET_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_PARAM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_PARAM_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_PARAM_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_REST_API2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_REST_API2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TUMBLING_WINDOW2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_csv_EMP",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2024-11-22T23:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_csv_EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_event-trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_QUESTION2_API",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/target/blobs/Files-API/india",
					"blobPathEndsWith": ".json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storage_event-trigger3_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_QUESTION2_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_event_trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_API_QUESTION2_6",
							"type": "PipelineReference"
						},
						"parameters": {
							"fname": "[parameters('storage_event_trigger2_properties_PL_API_QUESTION2_6_parameters_fname')]",
							"cname": "[parameters('storage_event_trigger2_properties_PL_API_QUESTION2_6_parameters_cname')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/targetapi/blobs/india",
					"blobPathEndsWith": ".json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storage_event_trigger2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_API_QUESTION2_6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_event_trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/outputtgt/blobs/API_FILES/india",
					"blobPathEndsWith": ".json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storage_event_trigger3_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_event_trigger_dept')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_STORAGE_TRIGGERS_PARAM",
							"type": "PipelineReference"
						},
						"parameters": {
							"fname": "[parameters('storage_event_trigger_dept_properties_PL_STORAGE_TRIGGERS_PARAM_parameters_fname')]",
							"cname": "[parameters('storage_event_trigger_dept_properties_PL_STORAGE_TRIGGERS_PARAM_parameters_cname')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/sourcefiles/blobs/dept",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('storage_event_trigger_dept_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_STORAGE_TRIGGERS_PARAM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_API')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2024-11-26T00:00:00",
						"endTime": "2024-11-26T12:00:00",
						"timeZone": "US Mountain Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling_window')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_csv_EMP",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 8,
					"startTime": "2024-11-22T23:00:00Z",
					"endTime": "2024-11-23T08:25:09Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_csv_EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADVANCE_QUESTION1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_TGT_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_TGT",
								"type": "DatasetReference"
							},
							"name": "srclookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_TGT",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_TGT",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "split1"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "alterRow2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> srclookup",
						"srclookup select(mapColumn(",
						"          CID_lkp = CID,",
						"          Name_lkp = Name,",
						"          MailID_lkp = MailID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"source1, srclookup lookup(source1@CID == srclookup@CID",
						"     && source1@MailID == srclookup@MailID",
						"     && source1@Name == srclookup@Name,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 filter(mod(source1@CID,2)!=0) ~> filter1",
						"filter1 split(isNull(srclookup@CID),",
						"     !isNull(srclookup@CID) || (source1@Name !=srclookup@Name) || (source1@MailID !=srclookup@MailID),",
						"     disjoint: false) ~> split1@(insert, update)",
						"split1@insert alterRow(insertIf(isInsert())) ~> alterRow1",
						"split1@update alterRow(updateIf(isUpdate())) ~> alterRow2",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"alterRow2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['CID','Name','MailID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_TGT_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADV_QUESTION1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_TGT_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_TGT",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"derivedColumn1 filter(toInteger(CID)%2!=0) ~> filter1",
						"source1 derive(CID = toInteger(CID)) ~> derivedColumn1",
						"filter1 alterRow(insertIf(isNull(CID)),",
						"     updateIf(!isNull(CID))) ~> AlterRow1",
						"AlterRow1 split(isInsert(),",
						"     isUpdate(),",
						"     disjoint: false) ~> split1@(insert, update)",
						"split1@insert sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_TGT_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADV_QUESTION3_REMOVE_DUPLICATE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_CAR_DUP",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_JSON",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          MODEL_NO as string,",
						"          MODEL_NAME as string,",
						"          MANUFACTURING_COUNTRY as string,",
						"          START_DATE as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 aggregate(groupBy(ID),",
						"     MANUFACTURING_COUNTRY = first(MANUFACTURING_COUNTRY),",
						"          MODEL_NAME = last(MODEL_NAME)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CAR_DUP')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_QUESTION5')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_PRODUCT_SRC",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_PRODUCT_TGT",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as integer,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as double,",
						"          ListPrice as double,",
						"          Size as string,",
						"          Weight as double,",
						"          ProductCategoryID as integer,",
						"          ProductModelID as integer,",
						"          SellStartDate as date,",
						"          SellEndDate as date,",
						"          DiscontinuedDate as date,",
						"          ThumbNailPhoto as string,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 filter(Color!='Blue') ~> filter1",
						"filter1 aggregate(groupBy(Name,",
						"          Color),",
						"     ListPrice = max(ListPrice)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PRODUCT_SRC')]",
				"[concat(variables('factoryId'), '/datasets/DS_PRODUCT_TGT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD_TYPE3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_TGT_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_SCDTYPE3",
								"type": "DatasetReference"
							},
							"name": "sourcelookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_SCDTYPE3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_CUSTOMERDATA_SCDTYPE3",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "split1"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "alterRow2"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CID as short,",
						"          Name as string,",
						"          MailID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string,",
						"          previous_MailID as string,",
						"          effective_startdate as date,",
						"          effective_enddate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sourcelookup",
						"sourcelookup select(mapColumn(",
						"          CID_LKP = CID,",
						"          Name_LKP = Name,",
						"          MailID_LKP = MailID,",
						"          previous_MailID_LKP = previous_MailID,",
						"          effective_startdate_LKP = effective_startdate,",
						"          effective_enddate_LKP = effective_enddate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"source1, sourcelookup lookup(source1@CID == sourcelookup@CID",
						"     && source1@MailID == sourcelookup@MailID",
						"     && source1@Name == sourcelookup@Name,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 split(isNull(sourcelookup@CID),",
						"     !isNull(sourcelookup@CID) || (source1@Name !=sourcelookup@Name) || (source1@MailID !=sourcelookup@MailID),",
						"     disjoint: false) ~> split1@(INSERT, UPDATE)",
						"split1@INSERT alterRow(insertIf(isInsert())) ~> alterRow1",
						"split1@UPDATE alterRow(updateIf(isUpdate())) ~> alterRow2",
						"alterRow1 derive({ effective_startdate} = currentUTC(),",
						"          effective_enddate = toDate('12-31-9999', 'mm-dd-YYYY')) ~> derivedColumn1",
						"alterRow2 derive(effective_startdate = currentUTC(),",
						"          previous_MailID = iif(isNull(previous_MailID), split1@UPDATE@MailID, previous_MailID),",
						"          new_MailID = split1@UPDATE@MailID,",
						"          effective_enddate = toDate('12-31-9999', 'mm-dd-YYYY')) ~> derivedColumn2",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string,",
						"          previous_MailID as string,",
						"          effective_startdate as date,",
						"          effective_enddate as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CID = split1@INSERT@CID,",
						"          Name = split1@INSERT@Name,",
						"          MailID = split1@INSERT@MailID,",
						"          MailID = previous_MailID,",
						"          effective_startdate,",
						"          effective_enddate",
						"     )) ~> sink1",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as integer,",
						"          Name as string,",
						"          MailID as string,",
						"          previous_MailID as string,",
						"          effective_startdate as date,",
						"          effective_enddate as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['CID','Name','MailID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CID = split1@UPDATE@CID,",
						"          Name = split1@UPDATE@Name,",
						"          MailID = split1@UPDATE@MailID,",
						"          MailID = previous_MailID,",
						"          effective_startdate,",
						"          effective_enddate",
						"     )) ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_TGT_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_CUSTOMERDATA_SCDTYPE3')]"
			]
		}
	]
}